<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="13" hostname="LAPTOP-PEBMGRD4" failures="0" tests="122" name="Test" time="2.548" errors="0" timestamp="2023-03-17T09:49:06 EDT">
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.721">
    <failure type="org.openqa.selenium.WebDriverException" message="Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: &amp;apos;4.5.0&amp;apos;, revision: &amp;apos;fe167b119a&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19.0.2&amp;apos;
Driver info: driver.version: SafariDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: driver.version: SafariDriver
at org.openqa.selenium.safari.SafariDriverService$Builder.findDefaultExecutable(SafariDriverService.java:110)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.safari.SafariDriverService.createDefaultService(SafariDriverService.java:67)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:60)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:49)
at com.numpy.utils.DriverManager.getDriver(DriverManager.java:58)
at com.numpy.TestCases.BaseClass.setup(BaseClass.java:40)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.015">
    <failure type="org.openqa.selenium.WebDriverException" message="Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: &amp;apos;4.5.0&amp;apos;, revision: &amp;apos;fe167b119a&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19.0.2&amp;apos;
Driver info: driver.version: SafariDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: driver.version: SafariDriver
at org.openqa.selenium.safari.SafariDriverService$Builder.findDefaultExecutable(SafariDriverService.java:110)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.safari.SafariDriverService.createDefaultService(SafariDriverService.java:67)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:60)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:49)
at com.numpy.utils.DriverManager.getDriver(DriverManager.java:58)
at com.numpy.TestCases.BaseClass.setup(BaseClass.java:40)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.011">
    <failure type="org.openqa.selenium.WebDriverException" message="Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: &amp;apos;4.5.0&amp;apos;, revision: &amp;apos;fe167b119a&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19.0.2&amp;apos;
Driver info: driver.version: SafariDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: driver.version: SafariDriver
at org.openqa.selenium.safari.SafariDriverService$Builder.findDefaultExecutable(SafariDriverService.java:110)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.safari.SafariDriverService.createDefaultService(SafariDriverService.java:67)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:60)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:49)
at com.numpy.utils.DriverManager.getDriver(DriverManager.java:58)
at com.numpy.TestCases.BaseClass.setup(BaseClass.java:40)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.009">
    <failure type="org.openqa.selenium.WebDriverException" message="Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: &amp;apos;4.5.0&amp;apos;, revision: &amp;apos;fe167b119a&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19.0.2&amp;apos;
Driver info: driver.version: SafariDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: driver.version: SafariDriver
at org.openqa.selenium.safari.SafariDriverService$Builder.findDefaultExecutable(SafariDriverService.java:110)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.safari.SafariDriverService.createDefaultService(SafariDriverService.java:67)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:60)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:49)
at com.numpy.utils.DriverManager.getDriver(DriverManager.java:58)
at com.numpy.TestCases.BaseClass.setup(BaseClass.java:40)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.01">
    <failure type="org.openqa.selenium.WebDriverException" message="Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: &amp;apos;4.5.0&amp;apos;, revision: &amp;apos;fe167b119a&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19.0.2&amp;apos;
Driver info: driver.version: SafariDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: driver.version: SafariDriver
at org.openqa.selenium.safari.SafariDriverService$Builder.findDefaultExecutable(SafariDriverService.java:110)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.safari.SafariDriverService.createDefaultService(SafariDriverService.java:67)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:60)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:49)
at com.numpy.utils.DriverManager.getDriver(DriverManager.java:58)
at com.numpy.TestCases.BaseClass.setup(BaseClass.java:40)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.01">
    <failure type="org.openqa.selenium.WebDriverException" message="Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: &amp;apos;4.5.0&amp;apos;, revision: &amp;apos;fe167b119a&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19.0.2&amp;apos;
Driver info: driver.version: SafariDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: driver.version: SafariDriver
at org.openqa.selenium.safari.SafariDriverService$Builder.findDefaultExecutable(SafariDriverService.java:110)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.safari.SafariDriverService.createDefaultService(SafariDriverService.java:67)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:60)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:49)
at com.numpy.utils.DriverManager.getDriver(DriverManager.java:58)
at com.numpy.TestCases.BaseClass.setup(BaseClass.java:40)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.007">
    <failure type="org.openqa.selenium.WebDriverException" message="Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: &amp;apos;4.5.0&amp;apos;, revision: &amp;apos;fe167b119a&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19.0.2&amp;apos;
Driver info: driver.version: SafariDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: driver.version: SafariDriver
at org.openqa.selenium.safari.SafariDriverService$Builder.findDefaultExecutable(SafariDriverService.java:110)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.safari.SafariDriverService.createDefaultService(SafariDriverService.java:67)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:60)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:49)
at com.numpy.utils.DriverManager.getDriver(DriverManager.java:58)
at com.numpy.TestCases.BaseClass.setup(BaseClass.java:40)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.008">
    <failure type="org.openqa.selenium.WebDriverException" message="Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: &amp;apos;4.5.0&amp;apos;, revision: &amp;apos;fe167b119a&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19.0.2&amp;apos;
Driver info: driver.version: SafariDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: driver.version: SafariDriver
at org.openqa.selenium.safari.SafariDriverService$Builder.findDefaultExecutable(SafariDriverService.java:110)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.safari.SafariDriverService.createDefaultService(SafariDriverService.java:67)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:60)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:49)
at com.numpy.utils.DriverManager.getDriver(DriverManager.java:58)
at com.numpy.TestCases.BaseClass.setup(BaseClass.java:40)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.008">
    <failure type="org.openqa.selenium.WebDriverException" message="Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: &amp;apos;4.5.0&amp;apos;, revision: &amp;apos;fe167b119a&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19.0.2&amp;apos;
Driver info: driver.version: SafariDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: driver.version: SafariDriver
at org.openqa.selenium.safari.SafariDriverService$Builder.findDefaultExecutable(SafariDriverService.java:110)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.safari.SafariDriverService.createDefaultService(SafariDriverService.java:67)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:60)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:49)
at com.numpy.utils.DriverManager.getDriver(DriverManager.java:58)
at com.numpy.TestCases.BaseClass.setup(BaseClass.java:40)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.014">
    <failure type="org.openqa.selenium.WebDriverException" message="Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: &amp;apos;4.5.0&amp;apos;, revision: &amp;apos;fe167b119a&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19.0.2&amp;apos;
Driver info: driver.version: SafariDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: driver.version: SafariDriver
at org.openqa.selenium.safari.SafariDriverService$Builder.findDefaultExecutable(SafariDriverService.java:110)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.safari.SafariDriverService.createDefaultService(SafariDriverService.java:67)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:60)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:49)
at com.numpy.utils.DriverManager.getDriver(DriverManager.java:58)
at com.numpy.TestCases.BaseClass.setup(BaseClass.java:40)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.006">
    <failure type="org.openqa.selenium.WebDriverException" message="Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: &amp;apos;4.5.0&amp;apos;, revision: &amp;apos;fe167b119a&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19.0.2&amp;apos;
Driver info: driver.version: SafariDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: driver.version: SafariDriver
at org.openqa.selenium.safari.SafariDriverService$Builder.findDefaultExecutable(SafariDriverService.java:110)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.safari.SafariDriverService.createDefaultService(SafariDriverService.java:67)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:60)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:49)
at com.numpy.utils.DriverManager.getDriver(DriverManager.java:58)
at com.numpy.TestCases.BaseClass.setup(BaseClass.java:40)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.005">
    <failure type="org.openqa.selenium.WebDriverException" message="Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: &amp;apos;4.5.0&amp;apos;, revision: &amp;apos;fe167b119a&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19.0.2&amp;apos;
Driver info: driver.version: SafariDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: driver.version: SafariDriver
at org.openqa.selenium.safari.SafariDriverService$Builder.findDefaultExecutable(SafariDriverService.java:110)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.safari.SafariDriverService.createDefaultService(SafariDriverService.java:67)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:60)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:49)
at com.numpy.utils.DriverManager.getDriver(DriverManager.java:58)
at com.numpy.TestCases.BaseClass.setup(BaseClass.java:40)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.005">
    <failure type="org.openqa.selenium.WebDriverException" message="Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: &amp;apos;4.5.0&amp;apos;, revision: &amp;apos;fe167b119a&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19.0.2&amp;apos;
Driver info: driver.version: SafariDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: driver.version: SafariDriver
at org.openqa.selenium.safari.SafariDriverService$Builder.findDefaultExecutable(SafariDriverService.java:110)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.safari.SafariDriverService.createDefaultService(SafariDriverService.java:67)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:60)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:49)
at com.numpy.utils.DriverManager.getDriver(DriverManager.java:58)
at com.numpy.TestCases.BaseClass.setup(BaseClass.java:40)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@BeforeMethod setup" time="0.006">
    <failure type="org.openqa.selenium.WebDriverException" message="Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: &amp;apos;4.5.0&amp;apos;, revision: &amp;apos;fe167b119a&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19.0.2&amp;apos;
Driver info: driver.version: SafariDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Unable to find driver executable: \usr\bin\safaridriver(SafariDriver requires Safari 10 running on OSX El Capitan or greater.)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: driver.version: SafariDriver
at org.openqa.selenium.safari.SafariDriverService$Builder.findDefaultExecutable(SafariDriverService.java:110)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.safari.SafariDriverService.createDefaultService(SafariDriverService.java:67)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:60)
at org.openqa.selenium.safari.SafariDriver.<init>(SafariDriver.java:49)
at com.numpy.utils.DriverManager.getDriver(DriverManager.java:58)
at com.numpy.TestCases.BaseClass.setup(BaseClass.java:40)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.numpy.TestCases.TC_GetStarted_000" name="GetStartedPageTest" time="0.001">
    <skipped/>
  </testcase> <!-- GetStartedPageTest -->
  <testcase classname="com.numpy.TestCases.TC_HomePage_001" name="checkArray" time="0.0">
    <skipped/>
  </testcase> <!-- checkArray -->
  <testcase classname="com.numpy.TestCases.TC_HomePage_001" name="checkDataStructures" time="0.0">
    <skipped/>
  </testcase> <!-- checkDataStructures -->
  <testcase classname="com.numpy.TestCases.TC_HomePage_001" name="checkGraph" time="0.0">
    <skipped/>
  </testcase> <!-- checkGraph -->
  <testcase classname="com.numpy.TestCases.TC_HomePage_001" name="checkLinkedList" time="0.0">
    <skipped/>
  </testcase> <!-- checkLinkedList -->
  <testcase classname="com.numpy.TestCases.TC_HomePage_001" name="checkQueue" time="0.001">
    <skipped/>
  </testcase> <!-- checkQueue -->
  <testcase classname="com.numpy.TestCases.TC_HomePage_001" name="checkStack" time="0.0">
    <skipped/>
  </testcase> <!-- checkStack -->
  <testcase classname="com.numpy.TestCases.TC_HomePage_001" name="checkTree" time="0.0">
    <skipped/>
  </testcase> <!-- checkTree -->
  <testcase classname="com.numpy.TestCases.TC_HomePage_001" name="homePageTest" time="0.001">
    <skipped/>
  </testcase> <!-- homePageTest -->
  <testcase classname="com.numpy.TestCases.TC_RegisterTest_002" name="register" time="0.0">
    <skipped/>
  </testcase> <!-- register -->
  <testcase classname="com.numpy.TestCases.TC_LoginErrorTest_003" name="loginFailureTest" time="0.0">
    <skipped/>
  </testcase> <!-- loginFailureTest -->
  <testcase classname="com.numpy.TestCases.TC_LoginTest_003" name="loginTest" time="0.0">
    <skipped/>
  </testcase> <!-- loginTest -->
  <testcase classname="com.numpy.TestCases.TC_HomePage_LoginCheck_006" name="checkArray" time="0.0">
    <skipped/>
  </testcase> <!-- checkArray -->
  <testcase classname="com.numpy.TestCases.TC_HomePage_LoginCheck_006" name="checkDataStructures" time="0.0">
    <skipped/>
  </testcase> <!-- checkDataStructures -->
  <testcase classname="com.numpy.TestCases.TC_HomePage_LoginCheck_006" name="checkGraph" time="0.0">
    <skipped/>
  </testcase> <!-- checkGraph -->
  <testcase classname="com.numpy.TestCases.TC_HomePage_LoginCheck_006" name="checkLinkedList" time="0.0">
    <skipped/>
  </testcase> <!-- checkLinkedList -->
  <testcase classname="com.numpy.TestCases.TC_HomePage_LoginCheck_006" name="checkQueue" time="0.0">
    <skipped/>
  </testcase> <!-- checkQueue -->
  <testcase classname="com.numpy.TestCases.TC_HomePage_LoginCheck_006" name="checkStack" time="0.0">
    <skipped/>
  </testcase> <!-- checkStack -->
  <testcase classname="com.numpy.TestCases.TC_HomePage_LoginCheck_006" name="checkTree" time="0.0">
    <skipped/>
  </testcase> <!-- checkTree -->
  <testcase classname="com.numpy.TestCases.TC_DataStructures_007" name="checkTimeComplexity" time="0.0">
    <skipped/>
  </testcase> <!-- checkTimeComplexity -->
  <testcase classname="com.numpy.TestCases.TC_DataStructures_007" name="clickTryHere" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHere -->
  <testcase classname="com.numpy.TestCases.TC_DataStructures_007" name="clickTryHereRun" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRun -->
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="checkApplicationsofArray" time="0.0">
    <skipped/>
  </testcase> <!-- checkApplicationsofArray -->
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="checkArraysInPython" time="0.0">
    <skipped/>
  </testcase> <!-- checkArraysInPython -->
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="checkArraysUsingList" time="0.0">
    <skipped/>
  </testcase> <!-- checkArraysUsingList -->
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="checkBasicOperationsInLists" time="0.0">
    <skipped/>
  </testcase> <!-- checkBasicOperationsInLists -->
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="clickTryHereApplicationsofArray" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereApplicationsofArray -->
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="clickTryHereArraysInPython" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereArraysInPython -->
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="clickTryHereArraysUsingList" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereArraysUsingList -->
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="clickTryHereBasicOperationsInLists" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereBasicOperationsInLists -->
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="clickTryHereRunApplicationsofArray" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunApplicationsofArray -->
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="clickTryHereRunArraysInPython" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunArraysInPython -->
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="clickTryHereRunArraysUsingList" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunArraysUsingList -->
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="clickTryHereRunBasicOperationsInLists" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunBasicOperationsInLists -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="checkCreatingLinkedLIst" time="0.0">
    <skipped/>
  </testcase> <!-- checkCreatingLinkedLIst -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="checkDeletion" time="0.0">
    <skipped/>
  </testcase> <!-- checkDeletion -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="checkImplementLinkedListinPython" time="0.0">
    <skipped/>
  </testcase> <!-- checkImplementLinkedListinPython -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="checkInsertion" time="0.0">
    <skipped/>
  </testcase> <!-- checkInsertion -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="checkIntroduction" time="0.0">
    <skipped/>
  </testcase> <!-- checkIntroduction -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="checkTraversal" time="0.0">
    <skipped/>
  </testcase> <!-- checkTraversal -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="checkTypesofLinkedList" time="0.0">
    <skipped/>
  </testcase> <!-- checkTypesofLinkedList -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereCreatingLinkedLIst" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereCreatingLinkedLIst -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereDeletion" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereDeletion -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereImplementLinkedListinPython" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereImplementLinkedListinPython -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereInsertion" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereInsertion -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereIntroduction" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereIntroduction -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereRunCreatingLinkedLIst" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunCreatingLinkedLIst -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereRunDeletion" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunDeletion -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereRunImplementLinkedListinPython" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunImplementLinkedListinPython -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereRunInsertion" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunInsertion -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereRunIntroduction" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunIntroduction -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereRunTraversal" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunTraversal -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereRunTypesofLinkedList" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunTypesofLinkedList -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereTraversal" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereTraversal -->
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereTypesofLinkedList" time="0.001">
    <skipped/>
  </testcase> <!-- clickTryHereTypesofLinkedList -->
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="checkApplications" time="0.0">
    <skipped/>
  </testcase> <!-- checkApplications -->
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="checkImplementation" time="0.0">
    <skipped/>
  </testcase> <!-- checkImplementation -->
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="checkOperationsinStack" time="0.0">
    <skipped/>
  </testcase> <!-- checkOperationsinStack -->
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="clickTryHereApplications" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereApplications -->
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="clickTryHereImplementation" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereImplementation -->
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="clickTryHereOperationsinStack" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereOperationsinStack -->
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="clickTryHereRunApplications" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunApplications -->
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="clickTryHereRunImplementation" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunImplementation -->
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="clickTryHereRunOperationsinStack" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunOperationsinStack -->
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="checkImplementationUsingArray" time="0.0">
    <skipped/>
  </testcase> <!-- checkImplementationUsingArray -->
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="checkImplementationUsingCollectionsDeque" time="0.0">
    <skipped/>
  </testcase> <!-- checkImplementationUsingCollectionsDeque -->
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="checkImplementationofQueueinPython" time="0.0">
    <skipped/>
  </testcase> <!-- checkImplementationofQueueinPython -->
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="checkQueueOperations" time="0.0">
    <skipped/>
  </testcase> <!-- checkQueueOperations -->
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="clickTryHereImplementationUsingCollectionsDeque" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereImplementationUsingCollectionsDeque -->
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="clickTryHereImplementationofQueueinPython" time="0.001">
    <skipped/>
  </testcase> <!-- clickTryHereImplementationofQueueinPython -->
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="clickTryHereQueueOperations" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereQueueOperations -->
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="clickTryHereRunImplementationUsingCollectionsDeque" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunImplementationUsingCollectionsDeque -->
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="clickTryHereRunImplementationofQueueinPython" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunImplementationofQueueinPython -->
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="clickTryHereRunQueueOperations" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunQueueOperations -->
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="clickTryHereRuncheckImplementationUsingArray" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRuncheckImplementationUsingArray -->
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="clickTryHerecheckImplementationUsingArray" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHerecheckImplementationUsingArray -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkApplicationsofBinarytrees" time="0.0">
    <skipped/>
  </testcase> <!-- checkApplicationsofBinarytrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkBinarySearchTrees" time="0.0">
    <skipped/>
  </testcase> <!-- checkBinarySearchTrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkBinaryTreeTraversals" time="0.0">
    <skipped/>
  </testcase> <!-- checkBinaryTreeTraversals -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkBinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- checkBinaryTrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkImplementationOfBST" time="0.0">
    <skipped/>
  </testcase> <!-- checkImplementationOfBST -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkImplementationinPython" time="0.0">
    <skipped/>
  </testcase> <!-- checkImplementationinPython -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkImplementationofBinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- checkImplementationofBinaryTrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkOverviewofTrees" time="0.0">
    <skipped/>
  </testcase> <!-- checkOverviewofTrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkTerminologies" time="0.0">
    <skipped/>
  </testcase> <!-- checkTerminologies -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkTraversalsIllustration" time="0.0">
    <skipped/>
  </testcase> <!-- checkTraversalsIllustration -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkTreeTraversals" time="0.0">
    <skipped/>
  </testcase> <!-- checkTreeTraversals -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkTypesofBinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- checkTypesofBinaryTrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkTypesofTrees" time="0.0">
    <skipped/>
  </testcase> <!-- checkTypesofTrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickImplementationOfBST" time="0.0">
    <skipped/>
  </testcase> <!-- clickImplementationOfBST -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereApplicationsofBinarytrees" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereApplicationsofBinarytrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereBinarySearchTrees" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereBinarySearchTrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereBinaryTreeTraversals" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereBinaryTreeTraversals -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereBinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereBinaryTrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereImplementationinPython" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereImplementationinPython -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereImplementationofBinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereImplementationofBinaryTrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereOverviewofTrees" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereOverviewofTrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunApplicationsofBinarytrees" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunApplicationsofBinarytrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunBinarySearchTrees" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunBinarySearchTrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunBinaryTreeTraversals" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunBinaryTreeTraversals -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunBinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunBinaryTrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunImplementationOfBST" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunImplementationOfBST -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunImplementationinPython" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunImplementationinPython -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunImplementationofBinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunImplementationofBinaryTrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunOverviewofTrees" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunOverviewofTrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunTerminologies" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunTerminologies -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunTraversalsIllustration" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunTraversalsIllustration -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunTreeTraversals" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunTreeTraversals -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunTypesofBinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunTypesofBinaryTrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunTypesofTrees" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunTypesofTrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereTerminologies" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereTerminologies -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereTraversalsIllustration" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereTraversalsIllustration -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereTreeTraversals" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereTreeTraversals -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereTypesofBinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereTypesofBinaryTrees -->
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereTypesofTrees" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereTypesofTrees -->
  <testcase classname="com.numpy.TestCases.TC_Graph_013" name="checkGraph" time="0.0">
    <skipped/>
  </testcase> <!-- checkGraph -->
  <testcase classname="com.numpy.TestCases.TC_Graph_013" name="checkGraphRepresentations" time="0.0">
    <skipped/>
  </testcase> <!-- checkGraphRepresentations -->
  <testcase classname="com.numpy.TestCases.TC_Graph_013" name="clickTryHereGraph" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereGraph -->
  <testcase classname="com.numpy.TestCases.TC_Graph_013" name="clickTryHereGraphRepresentations" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereGraphRepresentations -->
  <testcase classname="com.numpy.TestCases.TC_Graph_013" name="clickTryHereRunGraph" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunGraph -->
  <testcase classname="com.numpy.TestCases.TC_Graph_013" name="clickTryHereRunGraphRepresentations" time="0.0">
    <skipped/>
  </testcase> <!-- clickTryHereRunGraphRepresentations -->
  <testcase classname="com.numpy.TestCases.TC_LogoutTest_004" name="loginFailureTest" time="0.001">
    <skipped/>
  </testcase> <!-- loginFailureTest -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
</testsuite> <!-- Test -->
