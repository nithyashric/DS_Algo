<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="13" hostname="LAPTOP-PEBMGRD4" failures="1" tests="122" name="EdgeTest" time="129.561" errors="0" timestamp="2023-03-17T09:59:01 EDT">
  <testcase classname="com.numpy.TestCases.TC_GetStarted_000" name="GetStartedPageTest" time="0.723"/>
  <testcase classname="com.numpy.TestCases.TC_HomePage_001" name="checkArray" time="0.401"/>
  <testcase classname="com.numpy.TestCases.TC_HomePage_001" name="checkDataStructures" time="0.598"/>
  <testcase classname="com.numpy.TestCases.TC_HomePage_001" name="checkGraph" time="0.62"/>
  <testcase classname="com.numpy.TestCases.TC_HomePage_001" name="checkLinkedList" time="0.608"/>
  <testcase classname="com.numpy.TestCases.TC_HomePage_001" name="checkQueue" time="0.399"/>
  <testcase classname="com.numpy.TestCases.TC_HomePage_001" name="checkStack" time="0.403"/>
  <testcase classname="com.numpy.TestCases.TC_HomePage_001" name="checkTree" time="0.413"/>
  <testcase classname="com.numpy.TestCases.TC_HomePage_001" name="homePageTest" time="0.17"/>
  <testcase classname="com.numpy.TestCases.TC_RegisterTest_002" name="register" time="1.105">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at com.numpy.TestCases.TC_RegisterTest_002.register(TC_RegisterTest_002.java:39)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- register -->
  <testcase classname="com.numpy.TestCases.TC_LoginErrorTest_003" name="loginFailureTest" time="2.958"/>
  <testcase classname="com.numpy.TestCases.TC_LoginTest_003" name="loginTest" time="4.962"/>
  <testcase classname="com.numpy.TestCases.TC_HomePage_LoginCheck_006" name="checkArray" time="0.365"/>
  <testcase classname="com.numpy.TestCases.TC_HomePage_LoginCheck_006" name="checkDataStructures" time="0.419"/>
  <testcase classname="com.numpy.TestCases.TC_HomePage_LoginCheck_006" name="checkGraph" time="0.433"/>
  <testcase classname="com.numpy.TestCases.TC_HomePage_LoginCheck_006" name="checkLinkedList" time="0.435"/>
  <testcase classname="com.numpy.TestCases.TC_HomePage_LoginCheck_006" name="checkQueue" time="0.41"/>
  <testcase classname="com.numpy.TestCases.TC_HomePage_LoginCheck_006" name="checkStack" time="0.454"/>
  <testcase classname="com.numpy.TestCases.TC_HomePage_LoginCheck_006" name="checkTree" time="0.441"/>
  <testcase classname="com.numpy.TestCases.TC_DataStructures_007" name="checkTimeComplexity" time="0.611"/>
  <testcase classname="com.numpy.TestCases.TC_DataStructures_007" name="clickTryHere" time="0.89"/>
  <testcase classname="com.numpy.TestCases.TC_DataStructures_007" name="clickTryHereRun" time="0.934"/>
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="checkApplicationsofArray" time="0.51"/>
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="checkArraysInPython" time="0.532"/>
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="checkArraysUsingList" time="0.508"/>
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="checkBasicOperationsInLists" time="0.544"/>
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="clickTryHereApplicationsofArray" time="0.749"/>
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="clickTryHereArraysInPython" time="0.773"/>
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="clickTryHereArraysUsingList" time="0.634"/>
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="clickTryHereBasicOperationsInLists" time="1.586"/>
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="clickTryHereRunApplicationsofArray" time="1.597"/>
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="clickTryHereRunArraysInPython" time="1.498"/>
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="clickTryHereRunArraysUsingList" time="1.222"/>
  <testcase classname="com.numpy.TestCases.TC_Array_008" name="clickTryHereRunBasicOperationsInLists" time="1.631"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="checkCreatingLinkedLIst" time="1.31"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="checkDeletion" time="0.801"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="checkImplementLinkedListinPython" time="0.865"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="checkInsertion" time="0.622"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="checkIntroduction" time="0.756"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="checkTraversal" time="0.687"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="checkTypesofLinkedList" time="0.82"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereCreatingLinkedLIst" time="1.24"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereDeletion" time="1.957"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereImplementLinkedListinPython" time="1.201"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereInsertion" time="1.294"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereIntroduction" time="1.238"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereRunCreatingLinkedLIst" time="1.806"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereRunDeletion" time="1.639"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereRunImplementLinkedListinPython" time="1.609"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereRunInsertion" time="1.666"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereRunIntroduction" time="1.81"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereRunTraversal" time="1.84"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereRunTypesofLinkedList" time="2.047"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereTraversal" time="1.309"/>
  <testcase classname="com.numpy.TestCases.TC_LinkedList_009" name="clickTryHereTypesofLinkedList" time="1.53"/>
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="checkApplications" time="0.661"/>
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="checkImplementation" time="0.569"/>
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="checkOperationsinStack" time="0.627"/>
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="clickTryHereApplications" time="1.054"/>
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="clickTryHereImplementation" time="1.012"/>
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="clickTryHereOperationsinStack" time="1.021"/>
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="clickTryHereRunApplications" time="1.183"/>
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="clickTryHereRunImplementation" time="1.22"/>
  <testcase classname="com.numpy.TestCases.TC_Stack_010" name="clickTryHereRunOperationsinStack" time="1.03"/>
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="checkImplementationUsingArray" time="0.615"/>
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="checkImplementationUsingCollectionsDeque" time="0.604"/>
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="checkImplementationofQueueinPython" time="0.661"/>
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="checkQueueOperations" time="0.979"/>
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="clickTryHereImplementationUsingCollectionsDeque" time="1.049"/>
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="clickTryHereImplementationofQueueinPython" time="1.112"/>
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="clickTryHereQueueOperations" time="1.333"/>
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="clickTryHereRunImplementationUsingCollectionsDeque" time="1.628"/>
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="clickTryHereRunImplementationofQueueinPython" time="1.356"/>
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="clickTryHereRunQueueOperations" time="1.44"/>
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="clickTryHereRuncheckImplementationUsingArray" time="1.447"/>
  <testcase classname="com.numpy.TestCases.TC_Queue_011" name="clickTryHerecheckImplementationUsingArray" time="1.019"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkApplicationsofBinarytrees" time="1.017"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkBinarySearchTrees" time="0.71"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkBinaryTreeTraversals" time="0.663"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkBinaryTrees" time="0.591"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkImplementationOfBST" time="0.667"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkImplementationinPython" time="0.73"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkImplementationofBinaryTrees" time="0.599"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkOverviewofTrees" time="0.601"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkTerminologies" time="0.524"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkTraversalsIllustration" time="0.555"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkTreeTraversals" time="0.543"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkTypesofBinaryTrees" time="0.547"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="checkTypesofTrees" time="0.516"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickImplementationOfBST" time="0.776"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereApplicationsofBinarytrees" time="0.736"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereBinarySearchTrees" time="0.754"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereBinaryTreeTraversals" time="1.103"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereBinaryTrees" time="1.652"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereImplementationinPython" time="1.027"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereImplementationofBinaryTrees" time="1.006"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereOverviewofTrees" time="1.235"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunApplicationsofBinarytrees" time="1.199"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunBinarySearchTrees" time="1.087"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunBinaryTreeTraversals" time="1.526"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunBinaryTrees" time="1.652"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunImplementationOfBST" time="1.216"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunImplementationinPython" time="1.555"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunImplementationofBinaryTrees" time="1.487"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunOverviewofTrees" time="1.246"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunTerminologies" time="1.633"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunTraversalsIllustration" time="1.625"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunTreeTraversals" time="1.376"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunTypesofBinaryTrees" time="1.507"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereRunTypesofTrees" time="1.03"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereTerminologies" time="1.164"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereTraversalsIllustration" time="1.14"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereTreeTraversals" time="1.606"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereTypesofBinaryTrees" time="1.058"/>
  <testcase classname="com.numpy.TestCases.TC_Tree_012" name="clickTryHereTypesofTrees" time="2.377"/>
  <testcase classname="com.numpy.TestCases.TC_Graph_013" name="checkGraph" time="0.622"/>
  <testcase classname="com.numpy.TestCases.TC_Graph_013" name="checkGraphRepresentations" time="0.613"/>
  <testcase classname="com.numpy.TestCases.TC_Graph_013" name="clickTryHereGraph" time="0.91"/>
  <testcase classname="com.numpy.TestCases.TC_Graph_013" name="clickTryHereGraphRepresentations" time="1.165"/>
  <testcase classname="com.numpy.TestCases.TC_Graph_013" name="clickTryHereRunGraph" time="1.378"/>
  <testcase classname="com.numpy.TestCases.TC_Graph_013" name="clickTryHereRunGraphRepresentations" time="1.397"/>
  <testcase classname="com.numpy.TestCases.TC_LogoutTest_004" name="loginFailureTest" time="0.65"/>
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.numpy.TestCases.BaseClass" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
</testsuite> <!-- EdgeTest -->
